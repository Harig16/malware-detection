import time, sys
from csv import DictReader
import shutil
import os
import argparse


argprs = argparse.ArgumentParser()
argprs.add_argument("-C", "--classess", required=True,
	help="no of classess")
argprs.add_argument("-S", "--src", required=True,
	help="path to store image")
argprs.add_argument("-DE", "--des", required=True,
	help="path to store image")
args = vars(argprs.parse_args())

def load_label(path, label):
    """
    Load dataset from trainLabels.csv
    """
    result = []
    for row in DictReader(open(path)):
        if int(row["Class"]) == label:
            result.append((row["Id"]))
	#print len(result)
    return result

dest = args["des"]
if not os.path.exists(dest):
	os.mkdir(dest)

r = { 1: "Ramnit", 2: "Lollipop", 3: "Kelihos_ver3", 4: "Vundo", 5: "Simda", 6: "Tracur", 7: "Kelihos_ver1", 8: "Obfuscator.ACY", 9: "Gatak" }

def classify(f_label, label):
	d = dest+"/{}".format(r[label])
	if not os.path.exists(d):
		os.mkdir(d)
	c = 0
	for f in f_label:
		src = args["src"]+"/{}.jpg".format(f)
		if os.path.exists(src):
			c += 1
			shutil.copy(src, d)
	print c

if __name__ == "__main__":
    for label in range(1,int(args["classess"])+1):
		print "Classifing the {}".format(r[label])
		f_label = load_label("trainLabels.csv",label)
		print len(f_label)
		classify(f_label, label)
		print "Class {} is completed".format(r[label])
