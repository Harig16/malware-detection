import time, sys
from csv import DictReader
import shutil
import os
import argparse


argprs = argparse.ArgumentParser()
argprs.add_argument("-C", "--classess", required=True,
	help="no of classess")
argprs.add_argument("-S", "--src", required=True,
	help="path to store image")
argprs.add_argument("-DE", "--des", required=True,
	help="path to store image")
args = vars(argprs.parse_args())

def load_label(path, label):
    """
    Load dataset from trainLabels.csv
    """
    result = []
    for row in DictReader(open(path)):
        if int(row["Class"]) == label:
            result.append((row["Id"]))
    return result

dest = args["des"]
os.mkdir(dest)

r = { 1: "Ramnit", 2: "Lollipop", 3: "Kelihos_ver3", 4: "Vundo", 5: "Simda", 6: "Tracur", 7: "Kelihos_ver1", 8: "Obfuscator.ACY", 9: "Gatak" }

def classify(f_label, label):
    """
    Create a class folder and move the image from train dataset
    """
    d = args["des"]+"/%s/" % r[label]

    if not os.path.exists(d):
        val = "%s" % r[label]
        os.mkdir(dest + "/%s" % val)

    for f in f_label:
        src = args["src"]+"/%s.jpg" % f

        if os.path.isfile(src):
            shutil.copy(src,d)

if __name__ == "__main__":
    for label in range(1,int(args["classess"])+1):
    	print "Classifing the {}".format(r[label])
    	f_label = load_label("trainLabels.csv",label)
    	classify(f_label, label)
    	print "Class {} is completed".format(r[label])
    print "done"
